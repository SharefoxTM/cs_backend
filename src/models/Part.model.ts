export type Part = {
	active: boolean;
	assembly: boolean;
	barcode_hash: string;
	category: number;
	category_name: string;
	component: boolean;
	default_expiry: number;
	description: string;
	full_name: string;
	image: string;
	IPN: string;
	is_template: boolean;
	minimum_stock: number;
	name: string;
	pk: number;
	purchaseable: boolean;
	revision: string;
	units: string;
	variant_of: number;
	virtual: boolean;
	in_stock: number;
	ordering: number;
	required_for_build_orders: number;
	stock_item_count: number;
	suppliers: number;
	total_in_stock: number;
	variant_stock: number;
};

export type APIPart = {
	active: boolean;
	assembly: boolean;
	barcode_hash: string;
	category: number;
	category_name: string;
	component: boolean;
	creation_date: string;
	creation_user: number;
	default_expiry: number;
	default_location: number;
	default_supplier: number;
	description: string;
	full_name: string;
	image: string;
	IPN: string;
	is_template: boolean;
	keywords: string;
	last_stocktake: string;
	link: string;
	locked: boolean;
	minimum_stock: number;
	name: string;
	pk: number;
	purchaseable: boolean;
	revision: string;
	revision_of: number;
	revision_count: number;
	salable: boolean;
	starred: boolean;
	thumbnail: string;
	testable: boolean;
	trackable: boolean;
	units: string;
	variant_of: number;
	virtual: boolean;
	pricing_min: string;
	pricing_max: string;
	pricing_updated: string;
	responsible: number;
	allocated_to_build_orders: number;
	allocated_to_sales_orders: number;
	building: number;
	category_default_location: number;
	in_stock: number;
	ordering: number;
	required_for_build_orders: number;
	required_for_sales_orders: number;
	stock_item_count: number;
	suppliers: number;
	total_in_stock: number;
	external_stock: number;
	unallocated_stock: number;
	variant_stock: number;
	copy_category_parameters: boolean;
	tags: Array<string>;
};

export type APIPaginationPart = {
	count: number;
	next?: string;
	previous?: string;
	results: Array<APIPart>;
};

export type PaginationPart = {
	count: number;
	next?: string;
	previous?: string;
	results: Array<Part>;
};

export type APINewPart = {
	active?: boolean;
	assembly?: boolean;
	barcode_hash?: string;
	category: number;
	component?: boolean;
	default_expiry?: number;
	default_location?: number;
	default_supplier?: number;
	description?: string;
	full_name?: string;
	image?: string;
	IPN?: string;
	is_template?: boolean;
	keywords?: string;
	last_stocktake?: string;
	link?: string;
	minimum_stock?: number;
	name: string;
	notes?: string;
	pk?: number;
	purchaseable?: boolean;
	revision?: string;
	salable?: boolean;
	starred?: string;
	thumbnail?: string;
	trackable?: boolean;
	units?: string;
	variant_of?: number;
	virtual?: boolean;
	responsible?: number;
	allocated_to_build_orders?: number;
	allocated_to_sales_orders?: number;
	building?: number;
	in_stock?: number;
	ordering?: number;
	required_for_build_orders?: number;
	stock_item_count?: number;
	suppliers?: number;
	total_in_stock?: number;
	unallocated_stock?: number;
	variant_stock?: number;
	tags?: string[];
};

export type NewPart = {
	active: boolean;
	assembly: boolean;
	category: number;
	component: boolean;
	default_expiry?: number;
	default_location?: number;
	default_supplier?: number;
	description?: string;
	image?: string;
	IPN?: string;
	is_template: boolean;
	keywords?: string;
	last_stocktake?: string;
	link?: string;
	minimum_stock?: number;
	name: string;
	notes?: string;
	purchaseable: boolean;
	remote_image?: string;
	revision?: string;
	salable: boolean;
	trackable: boolean;
	units?: string;
	variant_of?: number;
	virtual: boolean;
	responsible?: number;
	tags?: string[];
};

export type APIPartDetail = {
	pk: number;
	IPN: string;
	barcode_hash: string;
	default_location: number;
	name: string;
	revision: string;
	full_name: string;
	description: string;
	thumbnail: string;
	active: boolean;
	assembly: boolean;
	is_template: boolean;
	purchaseable: boolean;
	salable: boolean;
	trackable: boolean;
	virtual: boolean;
	units: string;
	pricing_min?: string;
	pricing_max?: string;
};

export type PartDetail = {
	pk: number;
	IPN: string;
	barcode_hash: string;
	default_location: number;
	name: string;
	revision: string;
	full_name: string;
	description: string;
	thumbnail: string;
	active: boolean;
	assembly: boolean;
	is_template: boolean;
	purchaseable: boolean;
	virtual: boolean;
	units: string;
	pricing_min?: string;
	pricing_max?: string;
};

export type PartQuery = {
	IPN?: string; //Filter by exact IPN (internal part number)
	IPN_regex?: string; //Filter by regex on IPN (internal part number)
	active?: boolean;
	ancestor?: string;
	assembly?: boolean;
	component?: boolean;
	category?: string;
	convert_from?: string;
	created_after?: string; //Needs to be date format
	created_before?: string; //Needs to be date format
	depleted_stock?: boolean;
	exclude_tree?: string;
	has_ipn?: boolean;
	has_pricing?: boolean;
	has_stock?: boolean;
	has_units?: boolean;
	in_bom_for?: string;
	is_template?: boolean;
	limit?: string;
	low_stock?: boolean;
	name_regex?: string;
	offset?: string;
	ordering?: string; //Which field to use when ordering the results.
	purchaseable?: boolean;
	salable?: boolean;
	search?: string; //A search term.
	stock_to_build?: boolean;
	stocktake?: boolean;
	tags_name?: string;
	tags_slug?: string;
	trackable?: boolean;
	unallocated_stock?: boolean;
	variant_of?: string;
	virtual?: boolean;
};
